<div class="wrap">
<h1 class="logo ">Word search game</h1>
<p id="level_name" class="h1 hide" style="color:blue;"></p>
<p id="level_value" class="hide"></p>
<div id="error">
</div>
<div id="first">
 <%= form_tag('/word') do %>
 <!-- <p id="msg"> To Start Game Please Select Category which you want....!</p><br />  -->
 <div class="alert alert-success" id="msg">
    <strong>To Start Game Please Select Category which you want....!
    </strong> 
  </div><br /><br /><br /><br/>
 <div id="demo" class="select center-on-page">
 <%= select_tag :category, options_for_select(Word.select(:category).pluck(:category)) , id: "category-select" , prompt: 'Select Category' %>

  </div>
 <% end %>

</div>

</div>
<div class="row hide" id="history">
  <div class="side">
   <h2 class="center" style="text-align: center;">Histories</h2>
   <div class="card">
     <div class="card-body">
      <!--Table-->
    
       <table class="table table-hover table-sm jumbotron-history">
                        <!--Table head-->
       <thead style="background-color:#C0C0C0;">
        <tr class="text-white">

        
         <th>Word Category</th>
         <th>Word Game Level</th>
         <th>Score</th>
         <th>Time</th>
         <th>Date</th>
         <th colspan="3"></th>
        </tr>
       </thead>

  <tbody>
  <% @histories.each do |history| %>
    <% if current_user.id == history.user_id %>
      <tr>
       
         <td><%= history.word.category %></td>
         <td><%= history.level %></td>
         <td><%= history.score %></td>
         <td><%= history.player_time %></td>
         <td><%= history.created_at.strftime("%b %d, %Y") %></td>
      </tr>
    
    <% end %>

     <% end %>
  </tbody>
</table>
</div>
</div>
<br>
</div>

<div class="wrap" id="buttons">
  <p id="category_name" class="h1" style="color:blue;"></p>
  <div id="demo" class="select " style="">

  <select class="select" id="levels" name="levels" required onchange="enableButton()" />
   <option value="" disabled selected>Select Level</option>
   <!--  <option value=""
            hidden>Select Levels</option> -->
    <option value="15">High</option>
    <option value="10">Medium</option>
    <option value="5">Low</option>
    
  </select>
  </div>
 <!--  <br /><br /><br /> -->

  <button onclick="start_game('levels');" class="hide btn btn-lg btn-success" id="start" disabled >Lets Start Game  <span class="glyphicon glyphicon-hand-right"></span></button><br /><br />
  <button onclick="" class="hide btn btn-lg btn-primary" id="help" data-toggle="modal" data-target="#myModal"><span class="glyphicon glyphicon-info-sign"></span>  Help</button>
  <br /><br />
  <button onclick="" class="btn btn-lg btn-primary" id="score" data-toggle="modal" data-target="#high_score"><span class="glyphicon glyphicon-king"></span> High Score</button>
   <!-- <p id="high"> series: <%= @high_scores.to_json %> </p> --><br/><br>
  <br /><br />

  <button onclick="document.location.reload();" class="hide btn btn-lg btn-warning" id="back"><span class="glyphicon glyphicon-hand-left"></span>  Back</button>
 
  </div>


</div>
<div class="wrap"><div class="modal" id="myModal">
  <div class="modal-dialog">
    <div class="modal-content">

      <!-- Modal Header -->
      <div class="modal-header">
        <h4 class="modal-title">Instructions</h4>
        <button type="button" class="close" data-dismiss="modal">&times;</button>
      </div>

      <!-- Modal body -->
      <div class="modal-body">
       1).<br />
       2).
      </div>
      

      <!-- Modal footer -->
      <div class="modal-footer">
        <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>

      </div>

    </div>
  </div>

</div>
</div>

<div class="wrap"><div class="modal" id="high_score">
  <div class="modal-dialog">
    <div class="modal-content">

      <!-- Modal Header -->
      <div class="modal-header">
        <h4 class="modal-title">Scores</h4>
        <button type="button" class="close" data-dismiss="modal" onclick="$('#display').html(null);$('#display_medium').html(null);$('#display_low').html(null);">&times;</button>
      </div>

      <!-- Modal body -->
      <div class="modal-body">

         <div class="card-header tab-card-header primary">
         <ul class="nav nav-tabs card-header-tabs " id="tabs" role="tablist" style="background-color: orange;">
            <li class="nav-item" >
                <a class="nav-link" id="one-tab" data-toggle="tab" href="#tab-High" role="tab" aria-controls="One" aria-selected="true">High </a>
            </li>
            <li class="nav-item">
                <a class="nav-link" id="two-tab" data-toggle="tab" href="#tab-Medium" role="tab" aria-controls="Two" aria-selected="false">Medium </a>
            </li>
            <li class="nav-item">
                <a class="nav-link" id="three-tab" data-toggle="tab" href="#tab-Low" role="tab" aria-controls="Three" aria-selected="false">Low</a>
            </li>
          </ul>
        </div>
         <div class="tab-content" id="myTabContent">
          <div class="tab-pane fade show active p-3" id="tab-High" role="tabpanel" aria-labelledby="one-tab">
            <h5 class="card-title">High level Scores</h5>
            <p class="card-text">

        <table class="table table-hover table-sm jumbotron-history" id="display">
           <thead>
          <tr class="text-white">

        
         <th>Player Name</th>
        
         <th>Score</th>
        
         <th>Date</th>
         <th colspan="3"></th>
        </tr>
         </thead>
                        <!--Table head-->
       
</table></p>
                       
          </div>
          <div class="tab-pane fade p-3" id="tab-Medium" role="tabpanel" aria-labelledby="two-tab">
            <h5 class="card-title">Medium level Scores</h5>
            <p class="card-text">
        <table class="table table-hover table-sm jumbotron-history" id="display_medium">
          <tr class="text-white">

        
         <th>Player Name</th>
        
         <th>Score</th>
        
         <th>Date</th>
         <th colspan="3"></th>
        </tr>
                        <!--Table head-->
       
</table></p>
                        
          </div>
          <div class="tab-pane fade p-3" id="tab-Low" role="tabpanel" aria-labelledby="three-tab">
            <h5 class="card-title">Low level Scores</h5>
            <p class="card-text">
        <table class="table table-hover table-sm jumbotron-history" id="display_low">
          <tr class="text-white">

        
         <th>Player Name</th>
        
         <th>Score</th>
        
         <th>Date</th>
         <th colspan="3"></th>
        </tr>
                        <!--Table head-->
       
       </table>
     </p>
                         
          </div>

        </div>




      </div>

      <!-- Modal footer -->
      <div class="modal-footer">
        <button type="button" class="btn btn-danger" data-dismiss="modal" onclick="$('#display').html(null);$('#display_medium').html(null);$('#display_low').html(null);">Close</button> 
      </div>

    </div>
  </div>

</div>
</div>

<div class="wrap-gride jumbotron hide" id="grid">
  <!-- <div class="hide circle-text" id="timer" ></div>
   <div style=" text-align: right;" class="fixed-top"><a href="#">
          <span class="glyphicon glyphicon-home"></span>
        </a></div>
   <div class="hide circle-text" id="timer" ></div> -->
    <p id="category_name" class="h1" style="color:blue;"></p>
 <div class="parent">
  <div class="previous"> <div class="hide circle-text" id="timer" ></div>
</div>
  <div class="next">
   <!--  <div style=" text-align: right;" class="fixed-top"><a href="#">
          <span class="glyphicon glyphicon-home"></span>
        </a></div> -->
        <button type="button" class="fixed-top btn btn-warning btn-circle btn-xl" onclick="document.location.reload();"><span class="glyphicon glyphicon-home"></span>
        </button>
       
    </div>
 <button type="button" class=" next-pause btn btn-danger btn-circle btn-xl" onclick="pause()" id="pause"><span class="glyphicon glyphicon-pause"></span>  
        </button>
</div>

<!-- <span id="timer"></span> -->
<span id="countTimers" class="hide"></span>


 <!-- <i class="fas fa-home"></i> -->
       <span id="countdown2" class="hide " ></span> 
      <p id="p1" class="hide"></p>
      <div class="score h3" >Score:<span id="scores"></span></div>
      <section id="ws-area"  ></section>
        
      <ul class="ws-words h3 card card-image" ></ul>

      
   
  </div>

    <script type="text/javascript">
   
      function enableButton()
      {
      var selectelevel = document.getElementById('levels');
      var level_value=document.getElementById("levels").value
      console.log(level_value)
      var btnelem = document.getElementById('start');
      btnelem.disabled = !selectelevel.value;
      //var e = document.getElementById("nameSelect");
      var level = selectelevel.options[selectelevel.selectedIndex].text;
      document.getElementById("level_name").innerHTML = level
      document.getElementById("level_value").innerHTML = level_value
      // $("#levels").on("change", function() {
      //   var select_level= $(this).val();
      //  document.getElementById("level_name").innerHTML = select_level
      // });

     }
    $(function() {
    $("#category-select").on("change", function() {
      // $(document).ready(function () {
      //   $('#buttons').slideDown('slow', function () {
                
      //       });
      //    });

      var select_val = $(this).val();
      console.log(select_val);
      if (select_val) {
     
       $(this).addClass('hide');
       $("#msg").addClass('hide'); 
       $("#history").removeClass('hide')
       $("#first").addClass('hide')
       $("#start").removeClass('hide')
       $('#back').removeClass('hide')
       $('#help').removeClass('hide')
       $("#score").removeClass('hide')
       $("#levels").removeClass('hide')

         // Put words into `.ws-words`
        $.ajax({
        url:"words/fetch_words",
        type:'GET',
        dataType: "json",
        data: {"select_val" : select_val } , 
        success: function(data){
          gon.words=data.words
          document.getElementById("category_name").innerHTML = select_val
          gon.high_scores=data.scores
          gon.word_id=data.word_id
        
         
         //console.log(gon.s)
        

        },
        error:function(){
          alert("error")
        }
      });


      
     }
   

    });
    
  });
  function start_game() {
    initCountdown();
   
   let timerInterval
      Swal.fire({
      timer: 2000,
      onBeforeOpen: () => {
      Swal.showLoading()
      timerInterval = setInterval(() => {
        Swal.getContent().querySelector('strong')
        .textContent = Swal.getTimerLeft()
        }, 100)
   },
  onClose: () => {
    clearInterval(timerInterval)
  }
}).then((result) => {
  if (
    // Read more about handling dismissals
    result.dismiss === Swal.DismissReason.timer
  ) {
    // console.log('I was closed by the timer')
  // var input = {
  //             year: 0,
  //             month: 0,
  //             day: 0,
  //             hours: 0,
  //             minutes: 0,
  //             seconds: 0
  //         };
          

  //        var timestamp = new Date(input.year, input.month, input.day,
  //        input.hours, input.minutes, input.seconds);

  //        var interval = 1;


  //       tm=setInterval(function () {
  //       timestamp = new Date(timestamp.getTime() + interval * 1000);
  //       document.getElementById('countdown2').innerHTML =  timestamp.getMinutes() + ':' + timestamp.getSeconds() ;
  //        }, Math.abs(interval) * 1000);
  }
})
          var gameAreaEl = document.getElementById('ws-area');
          var gameobj = gameAreaEl.wordSearch();

        //Put words into `.ws-words`
          var words = gameobj.settings.wordsList,
          wordsWrap = document.querySelector('.ws-words');
          for (i in words) {
            var liEl = document.createElement('li');
            liEl.setAttribute('class', 'ws-word');
            liEl.innerText = words[i];
            wordsWrap.appendChild(liEl);


         

          }

  var player_time = document.getElementById("countdown2").innerHTML;
  var level = document.getElementById("level_name").textContent;
     console.log(player_time)
   $.ajax({
    url: "/histories/", 
    data: { "score": 0 , "player_time": "1:0" ,"level": level }, 
    dataType: "json",
    type: 'POST',
    success: function (data) {

        console.log(data);
        console.log(data.id);

        // alert("created")
        document.getElementById("p1").innerHTML = data.id;
        document.getElementById("scores").innerHTML = 0

     },
        error:function(){

          alert("error");
          
        }
      }); 
   $("#start").addClass('hide')
   $("#back").addClass('hide')
   $("#help").addClass('hide')
   $("#score").addClass('hide')
    $("#timer").removeClass('hide')
    $("#grid").removeClass('hide')
    $("#history").addClass('hide')
     $("#levels").addClass('hide')
     //$("#level_name").removeClass('hide')

}



//function high_score(){
  $('#tabs').on("click", "li", function (event) {         
   var activeTab = $(this).find('a').attr('href').split('-')[1];
    //alert(activeTab);
    $('#tabs').addClass("primary");

   //FurtherProcessing(activeTab);
   if(activeTab=='High')
   {
     $.ajax({
        
        url:"words/high_scores",
        type:'GET',
        dataType: "json",
        data: {"word_id" : gon.word_id  } , 
        success: function(data){
          //alert("!st success")
          
          //alert(JSON.stringify(data.scores_high))
          //alert(JSON.stringify(data.names_high))
          //dataname=JSON.stringify(data.name)
         //alert(data.scores)
          //console.log(dataname)
           $('#display_medium').html(null);
          $('#display_low').html(null);

          for(let i = 0; i < data.names_high.length; i++){
            for(let i = 0; i < data.scores_high.length; i++){
              for(let i = 0; i < data.player_dates_high.length; i++){
           var tr=$('<tr></tr>');
           console.log(data.names_high[i]);
            $('<td>'+data.names_high[i]+'</td>').appendTo(tr);
            $('<td>'+data.scores_high[i]+'</td>').appendTo(tr);
            $('<td>'+data.player_dates_high[i]+'</td>').appendTo(tr);
             tr.appendTo('#display');

          }
           break;
         }
           break;
        }
           console.log(data)
         
        



       },
       error:function(){alert("error")
       },
     })
   }
   else{
    
   
   if(activeTab=='Medium')
   {
    $.ajax({
      
      
        url:"words/high_scores",
        type:'GET',
        dataType: "json",
        data: {"word_id" : gon.word_id  } , 
        success: function(data){
          //alert("2ndsuccess")
          
         // alert(JSON.stringify(data.scores_medium))
          //alert(JSON.stringify(data.names_medium))
          
          $('#display').html(null);
       
          $('#display_low').html(null);

          for(let i = 0; i < data.names_medium.length; i++){
            for(let i = 0; i < data.scores_medium.length; i++){
              for(let i = 0; i < data.player_dates_medium.length; i++){
                for(let i = 0; i < data.scores_medium.length; i++){
           var tr=$('<tr></tr>');
           
            $('<td>'+data.names_medium[i]+'</td>').appendTo(tr);
            $('<td>'+data.scores_medium[i]+'</td>').appendTo(tr);
            $('<td>'+data.player_dates_medium[i]+'</td>').appendTo(tr);
            
             tr.appendTo('#display_medium');

          }
           break;
         }
           break;
        }
         break;
        }
           console.log(data)
         
        



       },
       error:function(){alert("error")
       },
     })

   }
   else{
   
   if(activeTab=='Low')
   {
        $.ajax({
      
      
        url:"words/high_scores",
        type:'GET',
        dataType: "json",
        data: {"word_id" : gon.word_id  } , 
        success: function(data){
          //alert("3rd success")
          
          //alert(JSON.stringify(data.scores_low))
          //alert(JSON.stringify(data.names_low))
          
          $('#display').html(null);
          $('#display_medium').html(null);
          for(let i = 0; i < data.names_low.length; i++){
            for(let i = 0; i < data.scores_low.length; i++){
              for(let i = 0; i < data.player_dates_low.length; i++){
                for(let i = 0; i < data.scores_low.length; i++){
           var tr=$('<tr></tr>');
          
            $('<td>'+data.names_low[i]+'</td>').appendTo(tr);
            $('<td>'+data.scores_low[i]+'</td>').appendTo(tr);
            $('<td>'+data.player_dates_low[i]+'</td>').appendTo(tr);
            
             tr.appendTo('#display_low');

          }
           break;
         }
           break;
        }
         break;
        }
           console.log(data)
         
        



       },
       error:function(){alert("error")
       },
     })
   }
 }
}
   // else{
   //  $('#display_low').html(null);
   // }
 
});

     // $.ajax({
      
      
     //    url:"words/high_scores",
     //    type:'GET',
     //    dataType: "json",
     //    data: {"word_id" : gon.word_id  } , 
     //    success: function(data){
     //      alert("success")
          
     //      alert(JSON.stringify(data.scores))
     //      alert(JSON.stringify(data.name))
     //      dataname=JSON.stringify(data.name)
     //     alert(data.scores)
     //      console.log(dataname)
     //      $('#display').html(null);
        
     //      for(let i = 0; i < data.name.length; i++){
     //        for(let i = 0; i < data.scores.length; i++){
     //          for(let i = 0; i < data.player_dates.length; i++){
     //       var tr=$('<tr></tr>');
     //       console.log(data.name[i]);
     //        $('<td>'+data.name[i]+'</td>').appendTo(tr);
     //        $('<td>'+data.scores[i]+'</td>').appendTo(tr);
     //        $('<td>'+data.player_dates[i]+'</td>').appendTo(tr);
     //         tr.appendTo('#display_medium');

     //      }
     //       break;
     //     }
     //       break;
     //    }
     //       console.log(data)
         
        



     //   },
     //   error:function(){alert("error")
     //   },
     // })


//}
function initCountdown() {
   var input = {
              year: 0,
              month: 0,
              day: 0,
              hours: 0,
              minutes: 0,
              seconds: 0
          };
          

         var timestamp = new Date(input.year, input.month, input.day,
         input.hours, input.minutes, input.seconds);

         var interval_time = 1;


        tm=setInterval(function () {
        timestamp = new Date(timestamp.getTime() + interval_time * 1000);
        document.getElementById('countdown2').innerHTML =  timestamp.getMinutes() + ':' + timestamp.getSeconds() ;
         }, Math.abs(interval_time) * 1000);

var level=document.getElementById("level_name").textContent;
   //alert(level);
   if (level=='High')
   {
  function event_click( event ){
    
    

    if( interval === null ){
      
      start();
      //event.target.innerText = 'pause';
        //alert('');
 
     
    } else {
      
      pause();
      //event.target.innerText = 'start';
       $(document).ready(function() {
                    swal({ 
                    title: "Game is Paused!",
                    text: "Click Ok to play the Game",                    
                    type: "info", 
                   },
                    function(){
   
                    start();
      
                   });

     });
    
      
    }
    
  }
  
  function start(){
    
    // First use pause() to be sure all intervals are cleared
    // it prevents them from doubling up
    
    pause();
    interval = setInterval( count, 1000 );
    
  }
  function pause() {
    //clearInterval(tm)
    clearInterval( interval );
    interval = null;
    
  }
  function count(){
    
    // By doing this before declaring your variables
    // you make it so the variables actually hold the new calculated values.
    
    time[2]--;
    
    if( time[2] == -1 ){
    
      time[1]--;
      time[2] = 59;
      
    }
    
    // Lets use some cool new syntax here to reduce the amount of code needed
    // this will destructure an array assigning their indexed values to the index of the variable
    
    var [ hours, minutes, seconds ] = time;

    if( seconds == 0 && minutes == 0 && hours == 0 ){
    
      clearInterval( interval );
       $(document).ready(function() {
                    swal({ 
                    title: "Ohh.....!",
                    text: "Time Up",                    
                    type: "info", 
                   },
                    function(){
   
                    document.location.reload();
                   });

     });
      
    }
    
    // We always want to print something, and if the values are 0
    // the output is still the same, so lets seperate that.
    
    if (seconds < 10) {
    
      outputElement.innerHTML = minutes + ": " + "0" + seconds + " ";
      
    } else {
    
      outputElement.innerHTML = minutes + ": " + seconds + " ";
      
    }
    
  }
  
  // Lets also clearly name our things.
  
  var outputElement = document.getElementById('timer');
  var toggleElement = document.getElementById('pause');
  var interval =null;
  var time = [0,0,30];

  // Add event listener once
  
  toggleElement.addEventListener( 'click', event_click );

  toggleElement.click();
   //alert('');
  }
else if(level=='Low')
   {
  function event_click( event ){
    
    

    if( interval === null ){
      
      start();
      //event.target.innerText = 'pause';
        //alert('');
 
     
    } else {
      
      pause();
      //event.target.innerText = 'start';
       $(document).ready(function() {
                    swal({ 
                    title: "Game is Paused!",
                    text: "Click Ok to play the Game",                    
                    type: "info", 
                   },
                    function(){
   
                    start();
      
                   });

     });
      
    
    }
    
  }
  
  function start(){
    
    // First use pause() to be sure all intervals are cleared
    // it prevents them from doubling up
    
    pause();
    interval = setInterval( count, 1000 );
    
  }
  function pause() {
    //clearInterval(tm)
    clearInterval( interval );
    interval = null;
    
  }
  function count(){
    
    // By doing this before declaring your variables
    // you make it so the variables actually hold the new calculated values.
    
    time[2]--;
    
    if( time[2] == -1 ){
    
      time[1]--;
      time[2] = 59;
      
    }
    
    // Lets use some cool new syntax here to reduce the amount of code needed
    // this will destructure an array assigning their indexed values to the index of the variable
    
    var [ hours, minutes, seconds ] = time;

    if( seconds == 0 && minutes == 0 && hours == 0 ){
    
      clearInterval( interval );
       $(document).ready(function() {
                    swal({ 
                    title: "Ohh.....!",
                    text: "Time Up",                  
                    type: "info", 
                   },
                    function(){
   
                    document.location.reload();
                   });

     });
      
    }
    
    // We always want to print something, and if the values are 0
    // the output is still the same, so lets seperate that.
    
    if (seconds < 10) {
    
      outputElement.innerHTML = minutes + ": " + "0" + seconds + " ";
      
    } else {
    
      outputElement.innerHTML = minutes + ": " + seconds + " ";
      
    }
    
  }
  
  // Lets also clearly name our things.
  
  var outputElement = document.getElementById('timer');
  var toggleElement = document.getElementById('pause');
  var interval =null;
  var time = [0,1,30];

  // Add event listener once
  
  toggleElement.addEventListener( 'click', event_click );

  toggleElement.click();
   
  }

else 
{


  function event_click( event ){
    
    

    if( interval === null ){
      
      start();
      //event.target.innerText = 'pause';
        //alert('');
 
     
    } else {
      
      pause();
      //event.target.innerText = 'start';
        $(document).ready(function() {
                     swal({ 
                    title: "Game is Paused!",
                    text: "Click Ok to play the Game",                    
                    type: "info", 
                   },
                    function(){
   
                   start();
                   });

     });
    
      
    }
    
  }
  
  function start(){
    
    // First use pause() to be sure all intervals are cleared
    // it prevents them from doubling up
    
    pause();
    interval = setInterval( count, 1000 );
    
  }
  function pause() {
    //clearInterval(tm)
    clearInterval( interval );
    interval = null;
    
  }
  function count(){
    
    // By doing this before declaring your variables
    // you make it so the variables actually hold the new calculated values.
    
    time[2]--;
    
    if( time[2] == -1 ){
    
      time[1]--;
      time[2] = 59;
      
    }
    
    // Lets use some cool new syntax here to reduce the amount of code needed
    // this will destructure an array assigning their indexed values to the index of the variable
    
    var [ hours, minutes, seconds ] = time;

    if( seconds == 0 && minutes == 0 && hours == 0 ){
    
      clearInterval( interval );
       $(document).ready(function() {
                    swal({ 
                    title: "Ohh.....!",
                    text: "Time Up",                    
                    type: "info", 
                   },
                    function(){
   
                    document.location.reload();
                   });

     });
      
    }
    
    // We always want to print something, and if the values are 0
    // the output is still the same, so lets seperate that.
    
    if (seconds < 10) {
    
      outputElement.innerHTML = minutes + ": " + "0" + seconds + " ";
      
    } else {
    
      outputElement.innerHTML = minutes + ": " + seconds + " ";
      
    }
    
  }
  
  // Lets also clearly name our things.
  
  var outputElement = document.getElementById('timer');
  var toggleElement = document.getElementById('pause');
  var interval =null;
  var time = [0,0,60];

  // Add event listener once
  
  toggleElement.addEventListener( 'click', event_click );

  toggleElement.click();

}

}
</script>

